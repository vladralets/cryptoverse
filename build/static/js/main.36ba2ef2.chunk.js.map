{"version":3,"sources":["services/cryptoApi.js","components/Loader.jsx","components/Cryptocurrencies.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","images/cryptocurrency.png","components/Navbar.jsx","components/Exchanges.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","App.js","app/store.js","index.js"],"names":["cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","process","REACT_APP_CRYPTO_API_URL","endpoints","builder","getCryptos","query","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Loader","className","Cryptocurrencies","simplified","cryptosList","data","isFetching","useState","cryptos","setCryptos","searchTerm","setSearchTerm","useEffect","coins","filteredData","filter","item","name","toLowerCase","includes","placeholder","onChange","e","target","value","gutter","map","currency","xs","sm","lg","to","id","title","rank","extra","src","iconUrl","hoverable","millify","price","marketCap","change","cryptoNewsHeaders","cryptoNewsApi","REACT_APP_NEWS_API_URL","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","Text","Typography","Title","Option","Select","News","setNewsCategory","cryptoNews","span","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","c","news","i","href","rel","level","image","thumbnail","contentUrl","alt","description","length","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","stats","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","Navbar","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","handleResize","window","innerWidth","addEventListener","removeEventListener","icon","size","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Panel","Collapse","Exchanges","exchangesList","exchanges","exchange","showArrow","header","volume","numberOfMarkets","marketShare","HTMLReactParser","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimestamp","history","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","CryptoDetails","useParams","setTimeperiod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","links","link","type","App","exact","path","style","color","textAlign","configureStore","reducer","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.36ba2ef2.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoApiHeaders = {\n  'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\n  'x-rapidapi-key': '31e17ea594mshdf9dfeb4dcbae3ep1e8d01jsn4089650d32f1',\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: 'cryptoApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_CRYPTO_API_URL }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges'),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;\n","import React from 'react';\nimport { Spin } from 'antd';\n\nconst Loader = () => (\n  <div className=\"loader\">\n    <Spin />\n  </div>\n);\n\nexport default Loader;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Link } from 'react-router-dom';\nimport { Card, Row, Col, Input } from 'antd';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst Cryptocurrencies = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState('');\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n\n    const filteredData = cryptosList?.data?.coins.filter((item) => item.name.toLowerCase().includes(searchTerm));\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value.toLowerCase())} />\n        </div>\n      )}\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\n            <Link key={currency.id} to={`/cryptoverse/crypto/${currency.id}`}>\n              <Card title={`${currency.rank}. ${currency.name}`} extra={<img className=\"crypto-image\" src={currency.iconUrl} />} hoverable>\n                <p>Price: {millify(currency.price)}</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {currency.change}%</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Cryptocurrencies;\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nconst cryptoNewsHeaders = {\n  'x-bingapis-sdk': 'true',\n  'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\n  'x-rapidapi-key': '31e17ea594mshdf9dfeb4dcbae3ep1e8d01jsn4089650d32f1',\n};\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders });\n\nexport const cryptoNewsApi = createApi({\n  reducerPath: 'cryptoNewsApi',\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_NEWS_API_URL }),\n  endpoints: (builder) => ({\n    getCryptoNews: builder.query({\n      query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n    }),\n  }),\n});\n\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi;\n","import React, { useState } from 'react';\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd';\nimport moment from 'moment';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi';\nimport Loader from './Loader';\n\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News';\n\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data } = useGetCryptosQuery(100);\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 });\n\n  if (!cryptoNews?.value) return <Loader />;\n\n  return (\n    <Row gutter={[24, 24]}>\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          >\n            <Option value=\"Cryptocurency\">Cryptocurrency</Option>\n            {data?.data?.coins?.map((currency, c) => <Option key={c} value={currency.name}>{currency.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"crypto\" />\n              </div>\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\n                </div>\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic } from 'antd';\nimport { Link } from 'react-router-dom';\n\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport Cryptocurrencies from './Cryptocurrencies';\nimport News from './News';\nimport Loader from './Loader';\n\nconst { Title } = Typography;\n\nconst Homepage = () => {\n  const { data, isFetching } = useGetCryptosQuery(10);\n  const globalStats = data?.data?.stats;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n      <Row gutter={[32, 32]}>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`$${millify(globalStats.totalMarketCap)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`$${millify(globalStats.total24hVolume)}`} /></Col>\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\n      </Row>\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptoverse/cryptocurrencies\">Show more</Link></Title>\n      </div>\n      <Cryptocurrencies simplified />\n      <div className=\"home-heading-container\">\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\n        <Title level={3}><Link to=\"/cryptoverse/news\">Show more</Link></Title>\n      </div>\n      <News simplified />\n    </>\n  );\n};\n\nexport default Homepage;\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined } from '@ant-design/icons';\n\nimport icon from '../images/cryptocurrency.png';\n\nconst Navbar = () => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  return (\n    <div className=\"nav-container\">\n      <div className=\"logo-container\">\n        <Avatar src={icon} size=\"large\" />\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Cryptoverse</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\">\n        <Menu.Item icon={<HomeOutlined />}>\n          <Link to=\"/cryptoverse/\">Home</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />}>\n          <Link to=\"/cryptoverse/cryptocurrencies\">Cryptocurrencies</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />}>\n          <Link to=\"/cryptoverse/exchanges\">Exchanges</Link>\n        </Menu.Item>\n        <Menu.Item icon={<BulbOutlined />}>\n          <Link to=\"/cryptoverse/news\">News</Link>\n        </Menu.Item>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n  const { data, isFetching } = useGetExchangesQuery();\n  const exchangesList = data?.data?.exchanges;\n\n  if (isFetching) return <Loader />;\n\n  return (\n    <>\n      <Row>\n        <Col span={6}>Exchanges</Col>\n        <Col span={6}>24h Trade Volume</Col>\n        <Col span={6}>Markets</Col>\n        <Col span={6}>Change</Col>\n      </Row>\n      <Row>\n        {exchangesList.map((exchange, i) => (\n          <Col span={24} key={i}>\n            <Collapse>\n              <Panel\n                key={exchange.id}\n                showArrow={false}\n                header={(\n                  <Row key={exchange.id}>\n                    <Col span={6}>\n                      <Text><strong>{exchange.rank}.</strong></Text>\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\n                      <Text><strong>{exchange.name}</strong></Text>\n                    </Col>\n                    <Col span={6}>${millify(exchange.volume)}</Col>\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\n                  </Row>\n                  )}\n              >\n                {HTMLReactParser(exchange.description || '')}\n              </Panel>\n            </Collapse>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Exchanges;\n","\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Col, Row, Typography } from 'antd';\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimestamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory?.data?.history[i].price);\n  }\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\n  }\n\n  const data = {\n    labels: coinTimestamp,\n    datasets: [\n      {\n        label: 'Price In USD',\n        data: coinPrice,\n        fill: false,\n        backgroundColor: '#0071bd',\n        borderColor: '#0071bd',\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\n          <Title level={5} className=\"current-price\">Current {coinName} Price: $ {currentPrice}</Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from 'react';\nimport HTMLReactParser from 'html-react-parser';\nimport { useParams } from 'react-router-dom';\nimport millify from 'millify';\nimport { Col, Row, Typography, Select } from 'antd';\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\n\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi';\nimport Loader from './Loader';\nimport LineChart from './LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timeperiod, setTimeperiod] = useState('7d');\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod });\n  const cryptoDetails = data?.data?.coin;\n\n  if (isFetching) return <Loader />;\n\n  const time = ['3h', '24h', '7d', '30d', '1y', '3m', '3y', '5y'];\n\n  const stats = [\n    { title: 'Price to USD', value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`, icon: <DollarCircleOutlined /> },\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    { title: '24h Volume', value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`, icon: <ThunderboltOutlined /> },\n    { title: 'Market Cap', value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`, icon: <DollarCircleOutlined /> },\n    { title: 'All-time-high(daily avg.)', value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`, icon: <TrophyOutlined /> },\n  ];\n\n  const genericStats = [\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\n    { title: 'Total Supply', value: `$ ${millify(cryptoDetails.totalSupply)}`, icon: <ExclamationCircleOutlined /> },\n    { title: 'Circulating Supply', value: `$ ${millify(cryptoDetails.circulatingSupply)}`, icon: <ExclamationCircleOutlined /> },\n  ];\n\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\n        </Title>\n        <p>{cryptoDetails.name} live price in US Dollar (USD). View value statistics, market cap and supply.</p>\n      </Col>\n      <Select defaultValue=\"7d\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\n        {time.map((date) => <Option key={date}>{date}</Option>)}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\">\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\n          {HTMLReactParser(cryptoDetails.description)}\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\n          {cryptoDetails.links?.map((link) => (\n            <Row className=\"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">{link.type}</Title>\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import React from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport { Layout, Typography, Space } from 'antd';\n\nimport { Exchanges, Homepage, News, Cryptocurrencies, CryptoDetails, Navbar } from './components/index';\nimport './App.css';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"navbar\">\n      <Navbar />\n    </div>\n    <div className=\"main\">\n      <Layout>\n        <div className=\"routes\">\n          <Switch>\n            <Route exact path=\"/cryptoverse/\">\n              <Homepage />\n            </Route>\n            <Route exact path=\"/cryptoverse/exchanges\">\n              <Exchanges />\n            </Route>\n            <Route exact path=\"/cryptoverse/cryptocurrencies\">\n              <Cryptocurrencies />\n            </Route>\n            <Route exact path=\"/cryptoverse/crypto/:coinId\">\n              <CryptoDetails />\n            </Route>\n            <Route exact path=\"/news\">\n              <News />\n            </Route>\n          </Switch>\n        </div>\n      </Layout>\n      <div className=\"footer\">\n        <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>Copyright © 2021\n          <Link to=\"/cryptoverse/\">\n            Cryptoverse Inc.\n          </Link> <br />\n          All Rights Reserved.\n        </Typography.Title>\n        <Space>\n          <Link to=\"/cryptoverse/\">Home</Link>\n          <Link to=\"/cryptoverse/exchanges\">Exchanges</Link>\n          <Link to=\"/cryptoverse/news\">News</Link>\n        </Space>\n      </div>\n    </div>\n  </div>\n);\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n});\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './App';\nimport store from './app/store';\n\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n"],"sourceRoot":""}